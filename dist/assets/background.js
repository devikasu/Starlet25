import{p as b}from"./textProcessor.js";const g=["algorithm","API","database","framework","function","method","object","class","variable","loop","condition","array","string","integer","boolean","null","undefined","callback","promise","async","await","module","package","library","dependency","version","deployment","production","development","testing","debugging","optimization","performance","security","authentication","authorization","encryption","compression","caching","scaling","microservices","monolith","frontend","backend","fullstack","responsive","accessibility","SEO"],S=["Object-Oriented Programming","Functional Programming","Procedural Programming","Event-Driven Programming","Reactive Programming","Declarative Programming","Imperative Programming","SOLID Principles","DRY Principle","KISS Principle","Design Patterns","Data Structures","Algorithms","Big O Notation","Memory Management","Garbage Collection","Threading","Concurrency","Asynchronous Programming","Error Handling","Logging","Monitoring"],v=[{id:"fallback_1",question:"What is this page about?",answer:"This page contains general information relevant to the user. The content has been extracted but could not be automatically summarized.",type:"concept",difficulty:"easy",tags:["general","fallback"],readingTime:"3 sec"},{id:"fallback_2",question:"What can the user do with this extension?",answer:"Extract text from web pages, summarize content, generate flashcards for learning, and analyze page content for better understanding.",type:"concept",difficulty:"easy",tags:["extension","fallback"],readingTime:"3 sec"},{id:"fallback_3",question:"How does text extraction work?",answer:"The extension identifies main content areas, removes navigation elements, and extracts clean text while avoiding ads, footers, and sidebars.",type:"process",difficulty:"medium",tags:["extraction","fallback"],readingTime:"3 sec"},{id:"fallback_4",question:"What types of content can be processed?",answer:"Articles, documentation, tutorials, blog posts, and any text-based content. The extension works best with structured, informative content.",type:"fact",difficulty:"easy",tags:["content","fallback"],readingTime:"3 sec"},{id:"fallback_5",question:"How can I use the text-to-speech feature?",answer:"Click the 🔊 Speak Summary button to have the page summary read aloud using your browser's text-to-speech capabilities.",type:"process",difficulty:"easy",tags:["speech","fallback"],readingTime:"3 sec"},{id:"fallback_6",question:"What are the different flashcard types?",answer:"Definition cards explain terms, concept cards cover ideas, fact cards present information, and process cards describe how things work.",type:"concept",difficulty:"medium",tags:["flashcards","fallback"],readingTime:"3 sec"}];function y(t){const n=d(t),e=x(t),i=C(t),s={text:A(n),keyPoints:k(n),topics:e,difficulty:i,confidence:E(t)};let o=_(t,e,i),r=!1;return(!o||o.length===0||s.confidence<.3)&&(o=[...v],r=!0,console.log("Starlet25: Using fallback flashcards due to low confidence or no content")),{summary:s,flashcards:o,generatedAt:Date.now(),isFallback:r}}function d(t){return t.split(/[.!?]+/).map(n=>n.trim()).filter(n=>n.length>10&&n.length<200).slice(0,20)}function p(t){return t.toLowerCase().replace(/[^\w\s]/g,"").split(/\s+/).filter(n=>n.length>3).filter(n=>!["this","that","with","have","will","from","they","know","want","been","good","much","some","time","very","when","come","just","into","than","more","other","about","many","then","them","these","people","only","well","also","over","still","take","every","think","here","again","another","around","because","before","should","through","during","first","going","great","might","never","often","place","right","small","sound","their","there","those","under","until","water","where","which","while","world","years","after","being","could","every","found","going","having","large","learn","never","other","place","right","small","sound","their","there","those","under","until","water","where","which","while","world","years"].includes(n))}function x(t){const n=[],e=t.toLowerCase();return g.some(i=>e.includes(i))&&n.push("Programming"),S.some(i=>e.includes(i.toLowerCase()))&&n.push("Software Development"),(e.includes("api")||e.includes("endpoint"))&&n.push("APIs"),(e.includes("database")||e.includes("sql")||e.includes("query"))&&n.push("Databases"),(e.includes("react")||e.includes("vue")||e.includes("angular"))&&n.push("Frontend Frameworks"),(e.includes("node")||e.includes("express")||e.includes("server"))&&n.push("Backend Development"),(e.includes("test")||e.includes("testing")||e.includes("unit"))&&n.push("Testing"),(e.includes("deploy")||e.includes("production")||e.includes("hosting"))&&n.push("Deployment"),(e.includes("security")||e.includes("authentication")||e.includes("encryption"))&&n.push("Security"),n.length===0&&n.push("General"),n.slice(0,3)}function C(t){const n=p(t),e=n.reduce((r,a)=>r+a.length,0)/n.length,i=d(t).length,s=g.filter(r=>t.toLowerCase().includes(r)).length;let o=0;return o+=e>8?2:e>6?1:0,o+=i>15?2:i>10?1:0,o+=s>5?2:s>2?1:0,o>=5?"hard":o>=2?"medium":"easy"}function E(t){const n=p(t),e=d(t);let i=.5;return n.length>100&&(i+=.2),e.length>5&&(i+=.1),g.some(s=>t.toLowerCase().includes(s))&&(i+=.1),(t.includes("function")||t.includes("class")||t.includes("method"))&&(i+=.1),Math.min(i,1)}function A(t){if(t.length===0)return"No content available for summarization.";const n=t.filter(i=>i.length>20&&i.length<120).slice(0,3).map(i=>i.replace(/\b(this|that|these|those|it|they|them)\b/gi,"").replace(/\b(is|are|was|were)\s+(a|an|the)\s+/gi,"is ").replace(/\s+/g," ").trim());if(n.length===0)return t[0]||"Content extracted but too short for meaningful summary.";let e=n.join(". ");return e.endsWith(".")||(e+="."),e.length>200&&(e=e.substring(0,197)+"..."),e}function k(t){return t.filter(n=>n.length>20&&n.length<100).slice(0,4).map(n=>n.replace(/\b(this|that|these|those)\b/gi,"").replace(/\s+/g," ").trim().substring(0,80))}function _(t,n,e){const i=[],s=D(t,n,e);i.push(...s);const o=P(t,n,e);return i.push(...o),i.slice(0,12)}function D(t,n,e){const i=[];d(t).slice(0,4).forEach((r,a)=>{const c=w(r),l=m(r);i.push({id:`qa_simple_${a}`,question:c,answer:l,type:"concept",difficulty:e,tags:[...n,"qa"],readingTime:f(l)})});const o=g.find(r=>t.toLowerCase().includes(r));if(o){const r=m(q(o,t));i.push({id:`qa_def_${o}`,question:`What is ${o}?`,answer:r,type:"definition",difficulty:e,tags:[...n,"definition","qa"],readingTime:f(r)})}return i.slice(0,5)}function P(t,n,e){const i=[];d(t).slice(4,7).forEach((a,c)=>{const l=w(a),u=m(a);i.push({id:`rev_simple_${c}`,question:l,answer:u,type:"fact",difficulty:e,tags:[...n,"revision"],readingTime:f(u)})});const r=p(t).find(a=>g.includes(a));if(r){const a=m(L(r));i.push({id:`rev_keyword_${r}`,question:`Define: ${r}`,answer:a,type:"definition",difficulty:e,tags:[...n,"keyword","revision"],readingTime:f(a)})}return i.slice(0,3)}function L(t){return{api:"Interface for software communication",function:"Reusable code block",variable:"Data storage container",class:"Object blueprint",method:"Class function",object:"Class instance",array:"Ordered data collection",string:"Text sequence",database:"Structured data storage",framework:"Development foundation",algorithm:"Problem-solving steps",loop:"Repeated execution",condition:"Decision logic",callback:"Function reference",promise:"Async operation result",module:"Code organization unit",package:"Dependency bundle",library:"Reusable code collection",dependency:"Required external code",deployment:"Application release",testing:"Code verification",debugging:"Error fixing",optimization:"Performance improvement",security:"Protection measures",authentication:"User verification",encryption:"Data protection",caching:"Temporary storage",scaling:"Performance expansion",frontend:"User interface",backend:"Server logic",responsive:"Adaptive design",accessibility:"Universal access",seo:"Search optimization"}[t.toLowerCase()]||`${t}: technical concept`}function q(t,n){const i=d(n).find(o=>o.toLowerCase().includes(t.toLowerCase()));return i||{api:"An Application Programming Interface (API) is a set of rules and protocols that allows different software applications to communicate with each other.",function:"A function is a reusable block of code that performs a specific task and can be called from other parts of the program.",variable:"A variable is a container that stores data values and can be referenced and manipulated throughout a program.",class:"A class is a blueprint for creating objects that defines their properties and methods.",method:"A method is a function that belongs to a class or object and defines the behavior of that class or object.",object:"An object is an instance of a class that contains data and code to manipulate that data.",array:"An array is a data structure that stores a collection of elements in a specific order.",string:"A string is a sequence of characters used to represent text in programming.",database:"A database is an organized collection of structured information or data stored electronically.",framework:"A framework is a pre-built structure that provides a foundation for developing applications."}[t.toLowerCase()]||`${t} is a technical concept used in software development.`}function w(t){if(/\b(is|are|was|were|means|refers to|describes|defines)\b/i.test(t)){const e=t.match(/^(.*?)\b(is|are|was|were|means|refers to|describes|defines)\b/i);if(e&&e[1])return`What is ${e[1].trim()}?`}const n=t.split(" ")[0];return n&&n.length<15?`What about ${n}?`:"What is this about?"}function m(t){const n=[[/utilizes?/gi,"uses"],[/initialization/gi,"starting"],[/implementation/gi,"how it works"],[/functionality/gi,"feature"],[/methodology/gi,"method"],[/individuals?/gi,"people"],[/commonly/gi,"often"],[/in order to/gi,"to"],[/prior to/gi,"before"],[/subsequent/gi,"next"],[/obtain/gi,"get"],[/demonstrates?/gi,"shows"],[/approximately/gi,"about"],[/assistance/gi,"help"],[/modification/gi,"change"],[/numerous/gi,"many"],[/various/gi,"different"],[/indicates?/gi,"shows"],[/facilitates?/gi,"helps"],[/commences?/gi,"starts"],[/terminates?/gi,"ends"],[/subsequently/gi,"then"],[/consequently/gi,"so"],[/therefore/gi,"so"],[/additionally/gi,"also"],[/approximately/gi,"about"],[/sufficient/gi,"enough"],[/insufficient/gi,"not enough"],[/advantageous/gi,"helpful"],[/disadvantageous/gi,"not helpful"],[/commonly/gi,"often"],[/frequently/gi,"often"],[/subsequent/gi,"next"],[/prior/gi,"before"],[/obtain/gi,"get"],[/demonstrate/gi,"show"],[/approximately/gi,"about"],[/assistance/gi,"help"],[/modification/gi,"change"],[/numerous/gi,"many"],[/various/gi,"different"],[/indicates?/gi,"shows"],[/facilitates?/gi,"helps"],[/commences?/gi,"starts"],[/terminates?/gi,"ends"],[/subsequently/gi,"then"],[/consequently/gi,"so"],[/therefore/gi,"so"],[/additionally/gi,"also"],[/approximately/gi,"about"],[/sufficient/gi,"enough"],[/insufficient/gi,"not enough"],[/advantageous/gi,"helpful"],[/disadvantageous/gi,"not helpful"]];let e=t;for(const[i,s]of n)e=e.replace(i,s);return e=e.replace(/\s+/g," ").trim(),e.length>120&&(e=e.slice(0,117)+"..."),e}function f(t){const n=t.split(/\s+/).length;return`${Math.max(1,Math.round(n/3))} sec`}async function h(t){try{await chrome.scripting.executeScript({target:{tabId:t},files:["assets/content.js"]}),console.log("✅ Starlet25: Content script injected into tab",t)}catch(n){throw console.error("❌ Starlet25: Failed to inject content script:",n),n}}async function T(t){try{const n=`page_text_${Date.now()}`,e=b(t.text),i=y(t.text),s={text:t.text,url:t.url,title:t.title,timestamp:t.timestamp,processed:e,summarization:i};await chrome.storage.local.set({[n]:s});const o=await chrome.storage.local.get(null),r=Object.keys(o).filter(a=>a.startsWith("page_text_"));if(r.length>10){const a=r.sort().slice(0,r.length-10);await chrome.storage.local.remove(a)}console.log(`[${new Date().toISOString()}] Extracted summary:`,t.text.slice(0,200)),console.log(`[${new Date().toISOString()}] Processed stats:`,{wordCount:e.wordCount,readingTime:e.estimatedReadingTime,language:e.language,hasCode:e.hasCode,hasLinks:e.hasLinks}),console.log(`[${new Date().toISOString()}] Generated ${i.flashcards.length} flashcards and summary with ${Math.round(i.summary.confidence*100)}% confidence${i.isFallback?" (FALLBACK USED)":""}`)}catch(n){console.error("Starlet25: Error storing text:",n)}}chrome.runtime.onMessage.addListener((t,n,e)=>{t.type==="PAGE_TEXT"&&(console.log(`[${new Date().toISOString()}] Extracted summary:`,t.text.slice(0,200)),T(t),e({success:!0}))});chrome.runtime.onMessage.addListener((t,n,e)=>{if(t.action==="PING")return console.log("🎤 Starlet25: Received PING request"),e({success:!0,message:"Starlet25 extension is running"}),!0;if(t.action==="GET_STORED_TEXTS")return console.log("🎤 Starlet25: Received GET_STORED_TEXTS request from voice assistant"),chrome.storage.local.get(null).then(i=>{const s=Object.entries(i).filter(([o])=>o.startsWith("page_text_")).map(([o,r])=>({id:o,...r})).sort((o,r)=>r.timestamp-o.timestamp);console.log("🎤 Starlet25: Retrieved stored texts count:",s.length),e({texts:s})}),!0;if(t.action==="CLEAR_STORED_TEXTS")return chrome.storage.local.get(null).then(i=>{const s=Object.keys(i).filter(o=>o.startsWith("page_text_"));chrome.storage.local.remove(s).then(()=>{e({success:!0})})}),!0;if(t.action==="EXTRACT_CURRENT_PAGE")return console.log("🎤 Starlet25: Received EXTRACT_CURRENT_PAGE request from voice assistant"),chrome.tabs.query({active:!0,currentWindow:!0},async i=>{const s=i[0];if(!s?.id){console.error("🎤 Starlet25: No active tab found for EXTRACT_CURRENT_PAGE"),e({success:!1,error:"No active tab found"});return}try{console.log("🎤 Starlet25: Injecting content script for extraction"),await h(s.id),chrome.tabs.sendMessage(s.id,{action:"EXTRACT_TEXT"},o=>{if(chrome.runtime.lastError)console.warn("⚠️ Starlet25: Content script not ready",chrome.runtime.lastError.message),e({success:!1,error:"Content script not ready"});else if(o&&o.text){console.log("✅ Starlet25: Got response from content script",o);const r=b(o.text),a=y(o.text),c={type:"PAGE_TEXT",text:o.text,url:o.url,title:o.title,timestamp:Date.now()};T(c),console.log("🎤 Starlet25: Sending successful response to voice assistant"),e({success:!0,text:o.text,processed:r,summarization:a})}else console.log("🎤 Starlet25: No text extracted from content script"),e({success:!1,error:"No text extracted"})})}catch(o){console.error("❌ Starlet25: Failed to inject content script for extraction:",o),e({success:!1,error:"Content script injection failed"})}}),!0;if(t.action==="TOGGLE_ACCESSIBILITY"){const{enabled:i}=t;return console.log(`Starlet25: Toggling accessibility to ${i}`),chrome.tabs.query({active:!0,currentWindow:!0},async s=>{const o=s[0];if(!o?.id){console.error("Starlet25: No active tab found"),e({success:!1,error:"No active tab found"});return}try{await h(o.id),chrome.tabs.sendMessage(o.id,{action:"TOGGLE_ACCESSIBILITY",enabled:i},r=>{chrome.runtime.lastError?(console.warn("⚠️ Starlet25: Content script not ready for accessibility toggle",chrome.runtime.lastError.message),e({success:!1,error:"Content script not responding"})):r&&r.success?(console.log(`✅ Starlet25: Accessibility ${i?"enabled":"disabled"} successfully`),i&&o.id&&chrome.scripting.executeScript({target:{tabId:o.id},func:()=>{const a=window.AudioContext||window.webkitAudioContext,c=new a,l=c.createOscillator(),u=c.createGain();l.connect(u),u.connect(c.destination),l.frequency.setValueAtTime(800,c.currentTime),l.frequency.exponentialRampToValueAtTime(1200,c.currentTime+.1),u.gain.setValueAtTime(0,c.currentTime),u.gain.linearRampToValueAtTime(.3,c.currentTime+.05),u.gain.exponentialRampToValueAtTime(.01,c.currentTime+.3),l.start(c.currentTime),l.stop(c.currentTime+.3)}}),e({success:!0})):(console.error("❌ Starlet25: Failed to toggle accessibility - no response"),e({success:!1,error:"Failed to toggle accessibility"}))})}catch(r){console.error("❌ Starlet25: Error injecting content script:",r),e({success:!1,error:"Content script injection failed"})}}),!0}});chrome.runtime.onInstalled.addListener(()=>{console.log("Starlet25: Extension installed")});chrome.commands.onCommand.addListener(async t=>{if(t==="start-voice-assistant"){console.log("🎤 Starlet25: Alt+Shift+V received in background script");try{const[n]=await chrome.tabs.query({active:!0,currentWindow:!0});if(console.log("🎤 Starlet25: Active tab found:",n?.id,n?.url),n?.id)try{console.log("🎤 Starlet25: Injecting content script..."),await h(n.id),console.log("🎤 Starlet25: Content script injected, sending START_VOICE_ASSISTANT message"),chrome.tabs.sendMessage(n.id,{action:"START_VOICE_ASSISTANT"},e=>{console.log("🎤 Starlet25: Received response from content script:",e),chrome.runtime.lastError?console.warn("⚠️ Starlet25: Content script not ready for voice assistant",chrome.runtime.lastError.message):e&&e.success?console.log("✅ Starlet25: Voice assistant started successfully"):console.error("❌ Starlet25: Failed to start voice assistant - response:",e)})}catch(e){console.error("❌ Starlet25: Error starting voice assistant",e)}else console.error("❌ Starlet25: No active tab found")}catch(n){console.error("❌ Starlet25: Error handling voice assistant shortcut",n)}}});chrome.tabs.onUpdated.addListener((t,n,e)=>{n.status==="complete"&&e.url&&e.url.startsWith("http")&&(console.log(`Starlet25: Tab ${t} completed loading: ${e.url}`),setTimeout(async()=>{try{const s=(await chrome.storage.local.get(["accessibilityEnabled"])).accessibilityEnabled===!0;await h(t),chrome.tabs.sendMessage(t,{action:"EXTRACT_TEXT"},o=>{chrome.runtime.lastError?console.log(`Starlet25: Content script not ready for text extraction on tab ${t}:`,chrome.runtime.lastError.message):o&&console.log(`Starlet25: Text extracted from tab ${t}`)}),s&&(console.log(`Starlet25: Accessibility enabled, sending toggle message on tab ${t}`),chrome.tabs.sendMessage(t,{action:"TOGGLE_ACCESSIBILITY",enabled:!0},o=>{chrome.runtime.lastError?console.log(`⚠️ Starlet25: Content script not ready for accessibility on tab ${t}:`,chrome.runtime.lastError.message):o&&console.log(`✅ Starlet25: Accessibility enabled on tab ${t}`)}))}catch(i){console.log(`ℹ️ Starlet25: Content script already injected or injection failed on tab ${t}:`,i)}},1e3))});
