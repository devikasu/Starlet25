import{p as m}from"./textProcessor.js";const d=["algorithm","API","database","framework","function","method","object","class","variable","loop","condition","array","string","integer","boolean","null","undefined","callback","promise","async","await","module","package","library","dependency","version","deployment","production","development","testing","debugging","optimization","performance","security","authentication","authorization","encryption","compression","caching","scaling","microservices","monolith","frontend","backend","fullstack","responsive","accessibility","SEO"],b=["Object-Oriented Programming","Functional Programming","Procedural Programming","Event-Driven Programming","Reactive Programming","Declarative Programming","Imperative Programming","SOLID Principles","DRY Principle","KISS Principle","Design Patterns","Data Structures","Algorithms","Big O Notation","Memory Management","Garbage Collection","Threading","Concurrency","Asynchronous Programming","Error Handling","Logging","Monitoring"],w=[{id:"fallback_1",question:"What is this page about?",answer:"This page contains general information relevant to the user. The content has been extracted but could not be automatically summarized.",type:"concept",difficulty:"easy",tags:["general","fallback"]},{id:"fallback_2",question:"What can the user do with this extension?",answer:"Extract text from web pages, summarize content, generate flashcards for learning, and analyze page content for better understanding.",type:"concept",difficulty:"easy",tags:["extension","fallback"]},{id:"fallback_3",question:"How does text extraction work?",answer:"The extension identifies main content areas, removes navigation elements, and extracts clean text while avoiding ads, footers, and sidebars.",type:"process",difficulty:"medium",tags:["extraction","fallback"]},{id:"fallback_4",question:"What types of content can be processed?",answer:"Articles, documentation, tutorials, blog posts, and any text-based content. The extension works best with structured, informative content.",type:"fact",difficulty:"easy",tags:["content","fallback"]},{id:"fallback_5",question:"How can I use the text-to-speech feature?",answer:"Click the 🔊 Speak Summary button to have the page summary read aloud using your browser's text-to-speech capabilities.",type:"process",difficulty:"easy",tags:["speech","fallback"]},{id:"fallback_6",question:"What are the different flashcard types?",answer:"Definition cards explain terms, concept cards cover ideas, fact cards present information, and process cards describe how things work.",type:"concept",difficulty:"medium",tags:["flashcards","fallback"]}];function p(e){const n=h(e),t=S(e),r=v(e),s={text:C(n),keyPoints:E(n),topics:t,difficulty:r,confidence:x(e)};let o=T(e,t,r),i=!1;return(!o||o.length===0||s.confidence<.3)&&(o=[...w],i=!0,console.log("Starlet25: Using fallback flashcards due to low confidence or no content")),{summary:s,flashcards:o,generatedAt:Date.now(),isFallback:i}}function h(e){return e.split(/[.!?]+/).map(n=>n.trim()).filter(n=>n.length>10&&n.length<200).slice(0,20)}function g(e){return e.toLowerCase().replace(/[^\w\s]/g,"").split(/\s+/).filter(n=>n.length>3).filter(n=>!["this","that","with","have","will","from","they","know","want","been","good","much","some","time","very","when","come","just","into","than","more","other","about","many","then","them","these","people","only","well","also","over","still","take","every","think","here","again","another","around","because","before","should","through","during","first","going","great","might","never","often","place","right","small","sound","their","there","those","under","until","water","where","which","while","world","years","after","being","could","every","found","going","having","large","learn","never","other","place","right","small","sound","their","there","those","under","until","water","where","which","while","world","years"].includes(n))}function S(e){const n=[],t=e.toLowerCase();return d.some(r=>t.includes(r))&&n.push("Programming"),b.some(r=>t.includes(r.toLowerCase()))&&n.push("Software Development"),(t.includes("api")||t.includes("endpoint"))&&n.push("APIs"),(t.includes("database")||t.includes("sql")||t.includes("query"))&&n.push("Databases"),(t.includes("react")||t.includes("vue")||t.includes("angular"))&&n.push("Frontend Frameworks"),(t.includes("node")||t.includes("express")||t.includes("server"))&&n.push("Backend Development"),(t.includes("test")||t.includes("testing")||t.includes("unit"))&&n.push("Testing"),(t.includes("deploy")||t.includes("production")||t.includes("hosting"))&&n.push("Deployment"),(t.includes("security")||t.includes("authentication")||t.includes("encryption"))&&n.push("Security"),n.length===0&&n.push("General"),n.slice(0,3)}function v(e){const n=g(e),t=n.reduce((i,l)=>i+l.length,0)/n.length,r=h(e).length,s=d.filter(i=>e.toLowerCase().includes(i)).length;let o=0;return o+=t>8?2:t>6?1:0,o+=r>15?2:r>10?1:0,o+=s>5?2:s>2?1:0,o>=5?"hard":o>=2?"medium":"easy"}function x(e){const n=g(e),t=h(e);let r=.5;return n.length>100&&(r+=.2),t.length>5&&(r+=.1),d.some(s=>e.toLowerCase().includes(s))&&(r+=.1),(e.includes("function")||e.includes("class")||e.includes("method"))&&(r+=.1),Math.min(r,1)}function C(e){if(e.length===0)return"No content available for summarization.";const n=e.filter(r=>r.length>20&&r.length<120).slice(0,3).map(r=>r.replace(/\b(this|that|these|those|it|they|them)\b/gi,"").replace(/\b(is|are|was|were)\s+(a|an|the)\s+/gi,"is ").replace(/\s+/g," ").trim());if(n.length===0)return e[0]||"Content extracted but too short for meaningful summary.";let t=n.join(". ");return t.endsWith(".")||(t+="."),t.length>200&&(t=t.substring(0,197)+"..."),t}function E(e){return e.filter(n=>n.length>20&&n.length<100).slice(0,4).map(n=>n.replace(/\b(this|that|these|those)\b/gi,"").replace(/\s+/g," ").trim().substring(0,80))}function T(e,n,t){const r=[],s=k(e,n,t);r.push(...s);const o=A(e,n,t);return r.push(...o),r.slice(0,12)}function k(e,n,t){const r=[],s=h(e);return d.filter(a=>e.toLowerCase().includes(a)).slice(0,3).forEach((a,c)=>{r.push({id:`qa_def_${c}`,question:`What is ${a} and how is it used?`,answer:D(a,e),type:"definition",difficulty:t,tags:[...n,"definition","qa"]})}),s.filter(a=>a.length>40&&a.length<120).slice(0,2).forEach((a,c)=>{const u=P(a);u&&r.push({id:`qa_concept_${c}`,question:`How would you explain ${u} to someone new to this topic?`,answer:a,type:"concept",difficulty:t,tags:[...n,"concept","qa"]})}),s.filter(a=>a.includes("step")||a.includes("process")||a.includes("method")||a.includes("procedure")).slice(0,2).forEach((a,c)=>{const u=L(a);u&&r.push({id:`qa_process_${c}`,question:`What are the key steps involved in ${u}?`,answer:a,type:"process",difficulty:t,tags:[...n,"process","qa"]})}),r}function A(e,n,t){const r=[],s=g(e);return s.filter(a=>a.length>4&&d.includes(a)).slice(0,4).forEach((a,c)=>{r.push({id:`rev_keyword_${c}`,question:`Define: ${a}`,answer:_(a),type:"definition",difficulty:t,tags:[...n,"keyword","revision"]})}),h(e).filter(a=>a.includes("is")||a.includes("are")||a.includes("was")||a.includes("were")).slice(0,3).forEach((a,c)=>{const u=$(a);u&&r.push({id:`rev_fact_${c}`,question:`What is ${u}?`,answer:a.substring(0,100)+(a.length>100?"...":""),type:"fact",difficulty:t,tags:[...n,"fact","revision"]})}),s.filter(a=>a.length>5&&!d.includes(a)).slice(0,3).forEach((a,c)=>{r.push({id:`rev_concept_${c}`,question:`Quick: ${a}`,answer:`A key concept related to ${a} in this context.`,type:"concept",difficulty:t,tags:[...n,"concept","revision"]})}),r}function _(e){return{api:"Interface for software communication",function:"Reusable code block",variable:"Data storage container",class:"Object blueprint",method:"Class function",object:"Class instance",array:"Ordered data collection",string:"Text sequence",database:"Structured data storage",framework:"Development foundation",algorithm:"Problem-solving steps",loop:"Repeated execution",condition:"Decision logic",callback:"Function reference",promise:"Async operation result",module:"Code organization unit",package:"Dependency bundle",library:"Reusable code collection",dependency:"Required external code",deployment:"Application release",testing:"Code verification",debugging:"Error fixing",optimization:"Performance improvement",security:"Protection measures",authentication:"User verification",encryption:"Data protection",caching:"Temporary storage",scaling:"Performance expansion",frontend:"User interface",backend:"Server logic",responsive:"Adaptive design",accessibility:"Universal access",seo:"Search optimization"}[e.toLowerCase()]||`${e}: technical concept`}function D(e,n){const r=h(n).find(o=>o.toLowerCase().includes(e.toLowerCase()));return r||{api:"An Application Programming Interface (API) is a set of rules and protocols that allows different software applications to communicate with each other.",function:"A function is a reusable block of code that performs a specific task and can be called from other parts of the program.",variable:"A variable is a container that stores data values and can be referenced and manipulated throughout a program.",class:"A class is a blueprint for creating objects that defines their properties and methods.",method:"A method is a function that belongs to a class or object and defines the behavior of that class or object.",object:"An object is an instance of a class that contains data and code to manipulate that data.",array:"An array is a data structure that stores a collection of elements in a specific order.",string:"A string is a sequence of characters used to represent text in programming.",database:"A database is an organized collection of structured information or data stored electronically.",framework:"A framework is a pre-built structure that provides a foundation for developing applications."}[e.toLowerCase()]||`${e} is a technical concept used in software development.`}function P(e){const n=[/the concept of (\w+)/i,/(\w+) is a/i,/(\w+) refers to/i,/(\w+) means/i];for(const t of n){const r=e.match(t);if(r)return r[1]}return null}function $(e){const n=[/(\w+) is (\w+)/i,/(\w+) are (\w+)/i,/(\w+) was (\w+)/i,/(\w+) were (\w+)/i];for(const t of n){const r=e.match(t);if(r)return r[1]}return null}function L(e){const n=[/the (\w+) process/i,/(\w+) procedure/i,/(\w+) method/i,/steps to (\w+)/i];for(const t of n){const r=e.match(t);if(r)return r[1]}return null}async function f(e){try{await chrome.scripting.executeScript({target:{tabId:e},files:["assets/content.js"]}),console.log("✅ Starlet25: Content script injected into tab",e)}catch(n){throw console.error("❌ Starlet25: Failed to inject content script:",n),n}}async function y(e){try{const n=`page_text_${Date.now()}`,t=m(e.text),r=p(e.text),s={text:e.text,url:e.url,title:e.title,timestamp:e.timestamp,processed:t,summarization:r};await chrome.storage.local.set({[n]:s});const o=await chrome.storage.local.get(null),i=Object.keys(o).filter(l=>l.startsWith("page_text_"));if(i.length>10){const l=i.sort().slice(0,i.length-10);await chrome.storage.local.remove(l)}console.log(`[${new Date().toISOString()}] Extracted summary:`,e.text.slice(0,200)),console.log(`[${new Date().toISOString()}] Processed stats:`,{wordCount:t.wordCount,readingTime:t.estimatedReadingTime,language:t.language,hasCode:t.hasCode,hasLinks:t.hasLinks}),console.log(`[${new Date().toISOString()}] Generated ${r.flashcards.length} flashcards and summary with ${Math.round(r.summary.confidence*100)}% confidence${r.isFallback?" (FALLBACK USED)":""}`)}catch(n){console.error("Starlet25: Error storing text:",n)}}chrome.runtime.onMessage.addListener((e,n,t)=>{e.type==="PAGE_TEXT"&&(console.log(`[${new Date().toISOString()}] Extracted summary:`,e.text.slice(0,200)),y(e),t({success:!0}))});chrome.runtime.onMessage.addListener((e,n,t)=>{if(e.action==="GET_STORED_TEXTS")return chrome.storage.local.get(null).then(r=>{const s=Object.entries(r).filter(([o])=>o.startsWith("page_text_")).map(([o,i])=>({id:o,...i})).sort((o,i)=>i.timestamp-o.timestamp);t({texts:s})}),!0;if(e.action==="CLEAR_STORED_TEXTS")return chrome.storage.local.get(null).then(r=>{const s=Object.keys(r).filter(o=>o.startsWith("page_text_"));chrome.storage.local.remove(s).then(()=>{t({success:!0})})}),!0;if(e.action==="EXTRACT_CURRENT_PAGE")return chrome.tabs.query({active:!0,currentWindow:!0},async r=>{const s=r[0];if(!s?.id){t({success:!1,error:"No active tab found"});return}try{await f(s.id),chrome.tabs.sendMessage(s.id,{action:"EXTRACT_TEXT"},o=>{if(chrome.runtime.lastError)console.warn("⚠️ Starlet25: Content script not ready",chrome.runtime.lastError.message),t({success:!1,error:"Content script not ready"});else if(o&&o.text){console.log("✅ Starlet25: Got response",o);const i=m(o.text),l=p(o.text),a={type:"PAGE_TEXT",text:o.text,url:o.url,title:o.title,timestamp:Date.now()};y(a),t({success:!0,text:o.text,processed:i,summarization:l})}else t({success:!1,error:"No text extracted"})})}catch(o){console.error("❌ Starlet25: Failed to inject content script for extraction:",o),t({success:!1,error:"Content script injection failed"})}}),!0;if(e.action==="TOGGLE_ACCESSIBILITY"){const{enabled:r}=e;return console.log(`Starlet25: Toggling accessibility to ${r}`),chrome.tabs.query({active:!0,currentWindow:!0},async s=>{const o=s[0];if(!o?.id){console.error("Starlet25: No active tab found"),t({success:!1,error:"No active tab found"});return}try{await f(o.id),chrome.tabs.sendMessage(o.id,{action:"TOGGLE_ACCESSIBILITY",enabled:r},i=>{chrome.runtime.lastError?(console.warn("⚠️ Starlet25: Content script not ready for accessibility toggle",chrome.runtime.lastError.message),t({success:!1,error:"Content script not responding"})):i&&i.success?(console.log(`✅ Starlet25: Accessibility ${r?"enabled":"disabled"} successfully`),t({success:!0})):(console.error("❌ Starlet25: Failed to toggle accessibility - no response"),t({success:!1,error:"Failed to toggle accessibility"}))})}catch(i){console.error("❌ Starlet25: Error injecting content script:",i),t({success:!1,error:"Content script injection failed"})}}),!0}});chrome.runtime.onInstalled.addListener(()=>{console.log("Starlet25: Extension installed")});chrome.tabs.onUpdated.addListener((e,n,t)=>{n.status==="complete"&&t.url&&t.url.startsWith("http")&&(console.log(`Starlet25: Tab ${e} completed loading: ${t.url}`),setTimeout(async()=>{try{const s=(await chrome.storage.local.get(["accessibilityEnabled"])).accessibilityEnabled===!0;await f(e),chrome.tabs.sendMessage(e,{action:"EXTRACT_TEXT"},o=>{chrome.runtime.lastError?console.log(`Starlet25: Content script not ready for text extraction on tab ${e}:`,chrome.runtime.lastError.message):o&&console.log(`Starlet25: Text extracted from tab ${e}`)}),s&&(console.log(`Starlet25: Accessibility enabled, sending toggle message on tab ${e}`),chrome.tabs.sendMessage(e,{action:"TOGGLE_ACCESSIBILITY",enabled:!0},o=>{chrome.runtime.lastError?console.log(`⚠️ Starlet25: Content script not ready for accessibility on tab ${e}:`,chrome.runtime.lastError.message):o&&console.log(`✅ Starlet25: Accessibility enabled on tab ${e}`)}))}catch(r){console.log(`ℹ️ Starlet25: Content script already injected or injection failed on tab ${e}:`,r)}},1e3))});
