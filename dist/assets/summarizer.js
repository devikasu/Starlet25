function $(e){const t=b(e),n=w(t),i=t.length,s=Math.ceil(n/200),a=y(t),o=v(t),r=k(t),u=C(e),l=T(e);return{originalText:e,wordCount:n,characterCount:i,estimatedReadingTime:s,summary:a,keywords:o,language:r,hasCode:u,hasLinks:l,processedAt:Date.now()}}function b(e){return e.replace(/\s+/g," ").replace(/\n\s*\n/g,`
`).trim()}function w(e){return e.split(/\s+/).filter(t=>t.length>0).length}function y(e,t=200){const n=e.split(/[.!?]+/).filter(s=>s.trim().length>0);let i="";for(const s of n){if((i+s).length>t)break;i+=s+". "}return i.trim()||e.substring(0,t)+"..."}function v(e,t=10){const n=e.toLowerCase().replace(/[^\w\s]/g,"").split(/\s+/).filter(s=>s.length>3),i={};return n.forEach(s=>{i[s]=(i[s]||0)+1}),Object.entries(i).sort(([,s],[,a])=>a-s).slice(0,t).map(([s])=>s)}function k(e){const t=["the","and","or","but","in","on","at","to","for","of","with","by"],n=["el","la","de","que","y","a","en","un","es","se","no","te"],i=e.toLowerCase().split(/\s+/);let s=0,a=0;return i.forEach(o=>{t.includes(o)&&s++,n.includes(o)&&a++}),s>a?"en":a>s?"es":"unknown"}function C(e){return[/function\s+\w+\s*\(/,/const\s+\w+\s*=/,/let\s+\w+\s*=/,/var\s+\w+\s*=/,/if\s*\(/,/for\s*\(/,/while\s*\(/,/class\s+\w+/,/import\s+/,/export\s+/,/console\.log/,/return\s+/,/=>\s*/,/{[\s\S]*}/,/\[[\s\S]*\]/,/\([\s\S]*\)/].some(n=>n.test(e))}function T(e){return/https?:\/\/[^\s]+/g.test(e)}function j(e){return e<1?"Less than 1 minute":e===1?"1 minute":`${e} minutes`}function F(e){return e===1?"1 word":`${e.toLocaleString()} words`}function I(e){return`${e.toLocaleString()} characters`}const g=["algorithm","API","database","framework","function","method","object","class","variable","loop","condition","array","string","integer","boolean","null","undefined","callback","promise","async","await","module","package","library","dependency","version","deployment","production","development","testing","debugging","optimization","performance","security","authentication","authorization","encryption","compression","caching","scaling","microservices","monolith","frontend","backend","fullstack","responsive","accessibility","SEO"],P=["Object-Oriented Programming","Functional Programming","Procedural Programming","Event-Driven Programming","Reactive Programming","Declarative Programming","Imperative Programming","SOLID Principles","DRY Principle","KISS Principle","Design Patterns","Data Structures","Algorithms","Big O Notation","Memory Management","Garbage Collection","Threading","Concurrency","Asynchronous Programming","Error Handling","Logging","Monitoring"],A=[{id:"fallback_1",question:"What is this page about?",answer:"This page contains general information relevant to the user. The content has been extracted but could not be automatically summarized.",type:"concept",difficulty:"easy",tags:["general","fallback"],readingTime:"3 sec"},{id:"fallback_2",question:"What can the user do with this extension?",answer:"Extract text from web pages, summarize content, generate flashcards for learning, and analyze page content for better understanding.",type:"concept",difficulty:"easy",tags:["extension","fallback"],readingTime:"3 sec"},{id:"fallback_3",question:"How does text extraction work?",answer:"The extension identifies main content areas, removes navigation elements, and extracts clean text while avoiding ads, footers, and sidebars.",type:"process",difficulty:"medium",tags:["extraction","fallback"],readingTime:"3 sec"},{id:"fallback_4",question:"What types of content can be processed?",answer:"Articles, documentation, tutorials, blog posts, and any text-based content. The extension works best with structured, informative content.",type:"fact",difficulty:"easy",tags:["content","fallback"],readingTime:"3 sec"},{id:"fallback_5",question:"How can I use the text-to-speech feature?",answer:"Click the ðŸ”Š Speak Summary button to have the page summary read aloud using your browser's text-to-speech capabilities.",type:"process",difficulty:"easy",tags:["speech","fallback"],readingTime:"3 sec"},{id:"fallback_6",question:"What are the different flashcard types?",answer:"Definition cards explain terms, concept cards cover ideas, fact cards present information, and process cards describe how things work.",type:"concept",difficulty:"medium",tags:["flashcards","fallback"],readingTime:"3 sec"}];function M(e){const t=c(e),n=x(e),i=q(e),s={text:D(t),keyPoints:L(t),topics:n,difficulty:i,confidence:S(e)};let a=_(e,n,i),o=!1;return(!a||a.length===0||s.confidence<.3)&&(a=[...A],o=!0,console.log("Starlet25: Using fallback flashcards due to low confidence or no content")),{summary:s,flashcards:a,generatedAt:Date.now(),isFallback:o}}function c(e){return e.split(/[.!?]+/).map(t=>t.trim()).filter(t=>t.length>10&&t.length<200).slice(0,20)}function h(e){return e.toLowerCase().replace(/[^\w\s]/g,"").split(/\s+/).filter(t=>t.length>3).filter(t=>!["this","that","with","have","will","from","they","know","want","been","good","much","some","time","very","when","come","just","into","than","more","other","about","many","then","them","these","people","only","well","also","over","still","take","every","think","here","again","another","around","because","before","should","through","during","first","going","great","might","never","often","place","right","small","sound","their","there","those","under","until","water","where","which","while","world","years","after","being","could","every","found","going","having","large","learn","never","other","place","right","small","sound","their","there","those","under","until","water","where","which","while","world","years"].includes(t))}function x(e){const t=[],n=e.toLowerCase();return g.some(i=>n.includes(i))&&t.push("Programming"),P.some(i=>n.includes(i.toLowerCase()))&&t.push("Software Development"),(n.includes("api")||n.includes("endpoint"))&&t.push("APIs"),(n.includes("database")||n.includes("sql")||n.includes("query"))&&t.push("Databases"),(n.includes("react")||n.includes("vue")||n.includes("angular"))&&t.push("Frontend Frameworks"),(n.includes("node")||n.includes("express")||n.includes("server"))&&t.push("Backend Development"),(n.includes("test")||n.includes("testing")||n.includes("unit"))&&t.push("Testing"),(n.includes("deploy")||n.includes("production")||n.includes("hosting"))&&t.push("Deployment"),(n.includes("security")||n.includes("authentication")||n.includes("encryption"))&&t.push("Security"),t.length===0&&t.push("General"),t.slice(0,3)}function q(e){const t=h(e),n=t.reduce((o,r)=>o+r.length,0)/t.length,i=c(e).length,s=g.filter(o=>e.toLowerCase().includes(o)).length;let a=0;return a+=n>8?2:n>6?1:0,a+=i>15?2:i>10?1:0,a+=s>5?2:s>2?1:0,a>=5?"hard":a>=2?"medium":"easy"}function S(e){const t=h(e),n=c(e);let i=.5;return t.length>100&&(i+=.2),n.length>5&&(i+=.1),g.some(s=>e.toLowerCase().includes(s))&&(i+=.1),(e.includes("function")||e.includes("class")||e.includes("method"))&&(i+=.1),Math.min(i,1)}function D(e){if(e.length===0)return"No content available for summarization.";const t=e.filter(i=>i.length>20&&i.length<120).slice(0,3).map(i=>i.replace(/\b(this|that|these|those|it|they|them)\b/gi,"").replace(/\b(is|are|was|were)\s+(a|an|the)\s+/gi,"is ").replace(/\s+/g," ").trim());if(t.length===0)return e[0]||"Content extracted but too short for meaningful summary.";let n=t.join(". ");return n.endsWith(".")||(n+="."),n.length>200&&(n=n.substring(0,197)+"..."),n}function L(e){return e.filter(t=>t.length>20&&t.length<100).slice(0,4).map(t=>t.replace(/\b(this|that|these|those)\b/gi,"").replace(/\s+/g," ").trim().substring(0,80))}function _(e,t,n){const i=[],s=W(e,t,n);i.push(...s);const a=E(e,t,n);return i.push(...a),i.slice(0,12)}function W(e,t,n){const i=[];c(e).slice(0,4).forEach((o,r)=>{const u=p(o),l=d(o);i.push({id:`qa_simple_${r}`,question:u,answer:l,type:"concept",difficulty:n,tags:[...t,"qa"],readingTime:f(l)})});const a=g.find(o=>e.toLowerCase().includes(o));if(a){const o=d(R(a,e));i.push({id:`qa_def_${a}`,question:`What is ${a}?`,answer:o,type:"definition",difficulty:n,tags:[...t,"definition","qa"],readingTime:f(o)})}return i.slice(0,5)}function E(e,t,n){const i=[];c(e).slice(4,7).forEach((r,u)=>{const l=p(r),m=d(r);i.push({id:`rev_simple_${u}`,question:l,answer:m,type:"fact",difficulty:n,tags:[...t,"revision"],readingTime:f(m)})});const o=h(e).find(r=>g.includes(r));if(o){const r=d(z(o));i.push({id:`rev_keyword_${o}`,question:`Define: ${o}`,answer:r,type:"definition",difficulty:n,tags:[...t,"keyword","revision"],readingTime:f(r)})}return i.slice(0,3)}function z(e){return{api:"Interface for software communication",function:"Reusable code block",variable:"Data storage container",class:"Object blueprint",method:"Class function",object:"Class instance",array:"Ordered data collection",string:"Text sequence",database:"Structured data storage",framework:"Development foundation",algorithm:"Problem-solving steps",loop:"Repeated execution",condition:"Decision logic",callback:"Function reference",promise:"Async operation result",module:"Code organization unit",package:"Dependency bundle",library:"Reusable code collection",dependency:"Required external code",deployment:"Application release",testing:"Code verification",debugging:"Error fixing",optimization:"Performance improvement",security:"Protection measures",authentication:"User verification",encryption:"Data protection",caching:"Temporary storage",scaling:"Performance expansion",frontend:"User interface",backend:"Server logic",responsive:"Adaptive design",accessibility:"Universal access",seo:"Search optimization"}[e.toLowerCase()]||`${e}: technical concept`}function R(e,t){const i=c(t).find(a=>a.toLowerCase().includes(e.toLowerCase()));return i||{api:"An Application Programming Interface (API) is a set of rules and protocols that allows different software applications to communicate with each other.",function:"A function is a reusable block of code that performs a specific task and can be called from other parts of the program.",variable:"A variable is a container that stores data values and can be referenced and manipulated throughout a program.",class:"A class is a blueprint for creating objects that defines their properties and methods.",method:"A method is a function that belongs to a class or object and defines the behavior of that class or object.",object:"An object is an instance of a class that contains data and code to manipulate that data.",array:"An array is a data structure that stores a collection of elements in a specific order.",string:"A string is a sequence of characters used to represent text in programming.",database:"A database is an organized collection of structured information or data stored electronically.",framework:"A framework is a pre-built structure that provides a foundation for developing applications."}[e.toLowerCase()]||`${e} is a technical concept used in software development.`}function O(e){const t=[];return e.text&&t.push(e.text),e.keyPoints&&e.keyPoints.length>0&&e.keyPoints.forEach(n=>{n.length>10&&n.length<200&&t.push(n)}),t.length<3&&c(e.text).slice(0,5).forEach(i=>{const s=d(i);s.length>20&&s.length<150&&!t.includes(s)&&t.push(s)}),t.length===0&&(t.push("This page contains information that can help with learning."),t.push("The content has been extracted and summarized for easy reading."),t.push("Use these notes to review and remember key points.")),t.slice(0,8)}function p(e){if(/\b(is|are|was|were|means|refers to|describes|defines)\b/i.test(e)){const n=e.match(/^(.*?)\b(is|are|was|were|means|refers to|describes|defines)\b/i);if(n&&n[1])return`What is ${n[1].trim()}?`}const t=e.split(" ")[0];return t&&t.length<15?`What about ${t}?`:"What is this about?"}function d(e){const t=[[/utilizes?/gi,"uses"],[/initialization/gi,"starting"],[/implementation/gi,"how it works"],[/functionality/gi,"feature"],[/methodology/gi,"method"],[/individuals?/gi,"people"],[/commonly/gi,"often"],[/in order to/gi,"to"],[/prior to/gi,"before"],[/subsequent/gi,"next"],[/obtain/gi,"get"],[/demonstrates?/gi,"shows"],[/approximately/gi,"about"],[/assistance/gi,"help"],[/modification/gi,"change"],[/numerous/gi,"many"],[/various/gi,"different"],[/indicates?/gi,"shows"],[/facilitates?/gi,"helps"],[/commences?/gi,"starts"],[/terminates?/gi,"ends"],[/subsequently/gi,"then"],[/consequently/gi,"so"],[/therefore/gi,"so"],[/additionally/gi,"also"],[/approximately/gi,"about"],[/sufficient/gi,"enough"],[/insufficient/gi,"not enough"],[/advantageous/gi,"helpful"],[/disadvantageous/gi,"not helpful"],[/commonly/gi,"often"],[/frequently/gi,"often"],[/subsequent/gi,"next"],[/prior/gi,"before"],[/obtain/gi,"get"],[/demonstrate/gi,"show"],[/approximately/gi,"about"],[/assistance/gi,"help"],[/modification/gi,"change"],[/numerous/gi,"many"],[/various/gi,"different"],[/indicates?/gi,"shows"],[/facilitates?/gi,"helps"],[/commences?/gi,"starts"],[/terminates?/gi,"ends"],[/subsequently/gi,"then"],[/consequently/gi,"so"],[/therefore/gi,"so"],[/additionally/gi,"also"],[/approximately/gi,"about"],[/sufficient/gi,"enough"],[/insufficient/gi,"not enough"],[/advantageous/gi,"helpful"],[/disadvantageous/gi,"not helpful"]];let n=e;for(const[i,s]of t)n=n.replace(i,s);return n=n.replace(/\s+/g," ").trim(),n.length>120&&(n=n.slice(0,117)+"..."),n}function f(e){const t=e.split(/\s+/).length;return`${Math.max(1,Math.round(t/3))} sec`}export{I as a,j as b,F as f,O as g,$ as p,M as s};
