function m(e){const t=y(e),n=b(t),s=t.length,o=Math.ceil(n/200),a=k(t),i=x(t),c=T(t),h=S(e),r=v(e);return{originalText:e,wordCount:n,characterCount:s,estimatedReadingTime:o,summary:a,keywords:i,language:c,hasCode:h,hasLinks:r,processedAt:Date.now()}}function y(e){return e.replace(/\s+/g," ").replace(/\n\s*\n/g,`
`).trim()}function b(e){return e.split(/\s+/).filter(t=>t.length>0).length}function k(e,t=200){const n=e.split(/[.!?]+/).filter(o=>o.trim().length>0);let s="";for(const o of n){if((s+o).length>t)break;s+=o+". "}return s.trim()||e.substring(0,t)+"..."}function x(e,t=10){const n=e.toLowerCase().replace(/[^\w\s]/g,"").split(/\s+/).filter(o=>o.length>3),s={};return n.forEach(o=>{s[o]=(s[o]||0)+1}),Object.entries(s).sort(([,o],[,a])=>a-o).slice(0,t).map(([o])=>o)}function T(e){const t=["the","and","or","but","in","on","at","to","for","of","with","by"],n=["el","la","de","que","y","a","en","un","es","se","no","te"],s=e.toLowerCase().split(/\s+/);let o=0,a=0;return s.forEach(i=>{t.includes(i)&&o++,n.includes(i)&&a++}),o>a?"en":a>o?"es":"unknown"}function S(e){return[/function\s+\w+\s*\(/,/const\s+\w+\s*=/,/let\s+\w+\s*=/,/var\s+\w+\s*=/,/if\s*\(/,/for\s*\(/,/while\s*\(/,/class\s+\w+/,/import\s+/,/export\s+/,/console\.log/,/return\s+/,/=>\s*/,/{[\s\S]*}/,/\[[\s\S]*\]/,/\([\s\S]*\)/].some(n=>n.test(e))}function v(e){return/https?:\/\/[^\s]+/g.test(e)}const f=["algorithm","API","database","framework","function","method","object","class","variable","loop","condition","array","string","integer","boolean","null","undefined","callback","promise","async","await","module","package","library","dependency","version","deployment","production","development","testing","debugging","optimization","performance","security","authentication","authorization","encryption","compression","caching","scaling","microservices","monolith","frontend","backend","fullstack","responsive","accessibility","SEO"],C=["Object-Oriented Programming","Functional Programming","Procedural Programming","Event-Driven Programming","Reactive Programming","Declarative Programming","Imperative Programming","SOLID Principles","DRY Principle","KISS Principle","Design Patterns","Data Structures","Algorithms","Big O Notation","Memory Management","Garbage Collection","Threading","Concurrency","Asynchronous Programming","Error Handling","Logging","Monitoring"],E=[{id:"fallback_1",question:"What is this page about?",answer:"This page contains general information relevant to the user. The content has been extracted but could not be automatically summarized.",type:"concept",difficulty:"easy",tags:["general","fallback"]},{id:"fallback_2",question:"What can the user do with this extension?",answer:"Extract text from web pages, summarize content, generate flashcards for learning, and analyze page content for better understanding.",type:"concept",difficulty:"easy",tags:["extension","fallback"]},{id:"fallback_3",question:"How does text extraction work?",answer:"The extension identifies main content areas, removes navigation elements, and extracts clean text while avoiding ads, footers, and sidebars.",type:"process",difficulty:"medium",tags:["extraction","fallback"]},{id:"fallback_4",question:"What types of content can be processed?",answer:"Articles, documentation, tutorials, blog posts, and any text-based content. The extension works best with structured, informative content.",type:"fact",difficulty:"easy",tags:["content","fallback"]},{id:"fallback_5",question:"How can I use the text-to-speech feature?",answer:"Click the ðŸ”Š Speak Summary button to have the page summary read aloud using your browser's text-to-speech capabilities.",type:"process",difficulty:"easy",tags:["speech","fallback"]},{id:"fallback_6",question:"What are the different flashcard types?",answer:"Definition cards explain terms, concept cards cover ideas, fact cards present information, and process cards describe how things work.",type:"concept",difficulty:"medium",tags:["flashcards","fallback"]}];function g(e){const t=d(e),n=A(e),s=P(e),o={text:D(t),keyPoints:L(t),topics:n,difficulty:s,confidence:_(e)};let a=O(e,n,s),i=!1;return(!a||a.length===0||o.confidence<.3)&&(a=[...E],i=!0,console.log("Starlet25: Using fallback flashcards due to low confidence or no content")),{summary:o,flashcards:a,generatedAt:Date.now(),isFallback:i}}function d(e){return e.split(/[.!?]+/).map(t=>t.trim()).filter(t=>t.length>10&&t.length<200).slice(0,20)}function p(e){return e.toLowerCase().replace(/[^\w\s]/g,"").split(/\s+/).filter(t=>t.length>3).filter(t=>!["this","that","with","have","will","from","they","know","want","been","good","much","some","time","very","when","come","just","into","than","more","other","about","many","then","them","these","people","only","well","also","over","still","take","every","think","here","again","another","around","because","before","should","through","during","first","going","great","might","never","often","place","right","small","sound","their","there","those","under","until","water","where","which","while","world","years","after","being","could","every","found","going","having","large","learn","never","other","place","right","small","sound","their","there","those","under","until","water","where","which","while","world","years"].includes(t))}function A(e){const t=[],n=e.toLowerCase();return f.some(s=>n.includes(s))&&t.push("Programming"),C.some(s=>n.includes(s.toLowerCase()))&&t.push("Software Development"),(n.includes("api")||n.includes("endpoint"))&&t.push("APIs"),(n.includes("database")||n.includes("sql")||n.includes("query"))&&t.push("Databases"),(n.includes("react")||n.includes("vue")||n.includes("angular"))&&t.push("Frontend Frameworks"),(n.includes("node")||n.includes("express")||n.includes("server"))&&t.push("Backend Development"),(n.includes("test")||n.includes("testing")||n.includes("unit"))&&t.push("Testing"),(n.includes("deploy")||n.includes("production")||n.includes("hosting"))&&t.push("Deployment"),(n.includes("security")||n.includes("authentication")||n.includes("encryption"))&&t.push("Security"),t.length===0&&t.push("General"),t.slice(0,3)}function P(e){const t=p(e),n=t.reduce((i,c)=>i+c.length,0)/t.length,s=d(e).length,o=f.filter(i=>e.toLowerCase().includes(i)).length;let a=0;return a+=n>8?2:n>6?1:0,a+=s>15?2:s>10?1:0,a+=o>5?2:o>2?1:0,a>=5?"hard":a>=2?"medium":"easy"}function _(e){const t=p(e),n=d(e);let s=.5;return t.length>100&&(s+=.2),n.length>5&&(s+=.1),f.some(o=>e.toLowerCase().includes(o))&&(s+=.1),(e.includes("function")||e.includes("class")||e.includes("method"))&&(s+=.1),Math.min(s,1)}function D(e){if(e.length===0)return"No content available for summarization.";const t=e.filter(n=>n.length>20).slice(0,3);return t.length===0?e[0]||"Content extracted but too short for meaningful summary.":t.join(" ")+"."}function L(e){return e.filter(t=>t.length>30&&t.length<150).slice(0,5).map(t=>t.trim())}function O(e,t,n){const s=[],o=d(e);return f.filter(r=>e.toLowerCase().includes(r)).slice(0,3).forEach((r,u)=>{s.push({id:`def_${u}`,question:`What is ${r}?`,answer:W(r,e),type:"definition",difficulty:n,tags:[...t,"definition"]})}),o.filter(r=>r.length>40&&r.length<120).slice(0,2).forEach((r,u)=>{const l=$(r);l&&s.push({id:`concept_${u}`,question:`Explain the concept of ${l}.`,answer:r,type:"concept",difficulty:n,tags:[...t,"concept"]})}),o.filter(r=>r.includes("is")||r.includes("are")||r.includes("was")||r.includes("were")).slice(0,2).forEach((r,u)=>{const l=I(r);l&&s.push({id:`fact_${u}`,question:`What is ${l}?`,answer:r,type:"fact",difficulty:n,tags:[...t,"fact"]})}),o.filter(r=>r.includes("step")||r.includes("process")||r.includes("method")||r.includes("procedure")).slice(0,1).forEach((r,u)=>{const l=q(r);l&&s.push({id:`process_${u}`,question:`What are the steps to ${l}?`,answer:r,type:"process",difficulty:n,tags:[...t,"process"]})}),s.slice(0,8)}function W(e,t){const s=d(t).find(a=>a.toLowerCase().includes(e.toLowerCase()));return s||{api:"An Application Programming Interface (API) is a set of rules and protocols that allows different software applications to communicate with each other.",function:"A function is a reusable block of code that performs a specific task and can be called from other parts of the program.",variable:"A variable is a container that stores data values and can be referenced and manipulated throughout a program.",class:"A class is a blueprint for creating objects that defines their properties and methods.",method:"A method is a function that belongs to a class or object and defines the behavior of that class or object.",object:"An object is an instance of a class that contains data and code to manipulate that data.",array:"An array is a data structure that stores a collection of elements in a specific order.",string:"A string is a sequence of characters used to represent text in programming.",database:"A database is an organized collection of structured information or data stored electronically.",framework:"A framework is a pre-built structure that provides a foundation for developing applications."}[e.toLowerCase()]||`${e} is a technical concept used in software development.`}function $(e){const t=[/the concept of (\w+)/i,/(\w+) is a/i,/(\w+) refers to/i,/(\w+) means/i];for(const n of t){const s=e.match(n);if(s)return s[1]}return null}function I(e){const t=[/(\w+) is (\w+)/i,/(\w+) are (\w+)/i,/(\w+) was (\w+)/i,/(\w+) were (\w+)/i];for(const n of t){const s=e.match(n);if(s)return s[1]}return null}function q(e){const t=[/the (\w+) process/i,/(\w+) procedure/i,/(\w+) method/i,/steps to (\w+)/i];for(const n of t){const s=e.match(n);if(s)return s[1]}return null}async function w(e){try{const t=`page_text_${Date.now()}`,n=m(e.text),s=g(e.text),o={text:e.text,url:e.url,title:e.title,timestamp:e.timestamp,processed:n,summarization:s};await chrome.storage.local.set({[t]:o});const a=await chrome.storage.local.get(null),i=Object.keys(a).filter(c=>c.startsWith("page_text_"));if(i.length>10){const c=i.sort().slice(0,i.length-10);await chrome.storage.local.remove(c)}console.log(`[${new Date().toISOString()}] Extracted summary:`,e.text.slice(0,200)),console.log(`[${new Date().toISOString()}] Processed stats:`,{wordCount:n.wordCount,readingTime:n.estimatedReadingTime,language:n.language,hasCode:n.hasCode,hasLinks:n.hasLinks}),console.log(`[${new Date().toISOString()}] Generated ${s.flashcards.length} flashcards and summary with ${Math.round(s.summary.confidence*100)}% confidence${s.isFallback?" (FALLBACK USED)":""}`)}catch(t){console.error("Starlet25: Error storing text:",t)}}chrome.runtime.onMessage.addListener((e,t,n)=>{e.type==="PAGE_TEXT"&&(console.log(`[${new Date().toISOString()}] Extracted summary:`,e.text.slice(0,200)),w(e),n({success:!0}))});chrome.runtime.onMessage.addListener((e,t,n)=>{if(e.action==="GET_STORED_TEXTS")return chrome.storage.local.get(null).then(s=>{const o=Object.entries(s).filter(([a])=>a.startsWith("page_text_")).map(([a,i])=>({id:a,...i})).sort((a,i)=>i.timestamp-a.timestamp);n({texts:o})}),!0;if(e.action==="CLEAR_STORED_TEXTS")return chrome.storage.local.get(null).then(s=>{const o=Object.keys(s).filter(a=>a.startsWith("page_text_"));chrome.storage.local.remove(o).then(()=>{n({success:!0})})}),!0;if(e.action==="EXTRACT_CURRENT_PAGE")return chrome.tabs.query({active:!0,currentWindow:!0},s=>{s[0]?.id?chrome.tabs.sendMessage(s[0].id,{action:"EXTRACT_TEXT"},o=>{if(o&&o.text){const a=m(o.text),i=g(o.text),c={type:"PAGE_TEXT",text:o.text,url:o.url,title:o.title,timestamp:Date.now()};w(c),n({success:!0,text:o.text,processed:a,summarization:i})}else n({success:!1,error:"No text extracted"})}):n({success:!1,error:"No active tab found"})}),!0});chrome.runtime.onInstalled.addListener(()=>{console.log("Starlet25: Extension installed")});chrome.tabs.onUpdated.addListener((e,t,n)=>{t.status==="complete"&&n.url&&n.url.startsWith("http")&&setTimeout(()=>{chrome.tabs.sendMessage(e,{action:"EXTRACT_TEXT"}).catch(()=>{})},1e3)});
